<?php

class Coba extends CI_Controller {

    public function __construct () {
        parent::__construct();

        $this->load->model('Coba_Model');
    }

    public function index () {
        $data['judul'] = 'Daftar Coba-Coba';

        $this->load->view('_templates/header', $data);
        $this->load->view('coba/index', $data);
        $this->load->view('_templates/footer');
    }

    public function getKriteria () {
        $list = $this->Coba_Model->getDataTables();
        $data = [];
        $no = $this->input->post('start');

        foreach ($list as $coba) {
            $row = [];
            $row[] = ++$no;
            $row[] = $coba->kode;
            $row[] = $coba->nama;
            $row[] = $coba->bobot;
            $row[] = $coba->normalisasi;
            
            //add action in table
            $row[] = '
            <div class="d-sm-flex bd-highlight align-content-center justify-content-around">
            <button type="button" id="'. $coba->kode . '"class="btn btn-sm updateCoba">
            <i class="fas fa-pencil-alt" style="color:green"></i>
            </buton>
           
            <button type="button" id="' . $coba->kode . '"class="btn btn-sm deleteCoba">
            <i class="fas fa-trash" style="color:red"></i>
            </button>
            </div>
            ';

            $data[] = $row;
        }

        $output = [
            "draw" => $this->input->post('draw'),
            "recordsTotal" => $this->Coba_Model->countAll(),
            "recordsFiltered" => $this->Coba_Model->countFiltered(),
            "data" => $data,
        ];
    
        echo json_encode($output);
    }

    public function getKriteriaById () {
        $data = $this->Coba_Model->getKriteriaById($this->input->post('id'));
        echo json_encode($data);
    }

    public function tambahKriteria () {
        $rules = [
            [
                'field' => 'kodeKriteria',
                'label' => 'Kode Kriteria',
                'rules' => 'required'
            ],
            [
                'field' => 'kriteria',
                'label' => 'Kriteria',
                'rules' => 'required'
            ],
            [
                'field' => 'bobot',
                'label' => 'Bobot Kriteria',
                'rules' => 'required|numeric'
            ]
        ];

        $this->form_validation->set_rules($rules);

        if ($this->form_validation->run() == FALSE) {
            $data = [
                'kodeKriteria' => form_error('kodeKriteria'),
                'kriteria' => form_error('kriteria'),
                'bobot' => form_error('bobot')
            ];   

            echo json_encode($data);
        } else {
            $this->Coba_Model->tambahKriteria();
            $this->Coba_Model->hitungNormalisasi();
            echo json_encode(array("status" => TRUE));
        }

    }

    public function ubahKriteria () {
        $rules = [
            [
                'field' => 'kodeKriteriaEdit',
                'label' => 'Kode Kriteria',
                'rules' => 'required'
            ],
            [
                'field' => 'kriteriaEdit',
                'label' => 'Kriteria',
                'rules' => 'required'
            ],
            [
                'field' => 'bobotEdit',
                'label' => 'Bobot Kriteria',
                'rules' => 'required|numeric'
            ]
        ];

        $this->form_validation->set_rules($rules);

        if ($this->form_validation->run() == FALSE) {
            $data = [
                'kodeKriteriaEdit' => form_error('kodeKriteriaEdit'),
                'kriteriaEdit' => form_error('kriteriaEdit'),
                'bobotEdit' => form_error('bobotEdit')
            ];   

            echo json_encode($data);
        } else {
            $this->Coba_Model->ubahKriteria();
            $this->Coba_Model->hitungNormalisasi();
            echo json_encode(array("status" => TRUE));
        }
    }

    public function hapusKriteria () {
        $this->Coba_Model->hapusKriteria($this->input->post('id'));
        $this->Coba_Model->hitungNormalisasi();
        echo json_encode(["status" => TRUE]);
    }
}

?>





// google chart

// $(document).ready(function () {
//   $('.filterTgl').remove()

//   $.ajax({
//     url: 'home/getTgl',
//     type: 'post',
//     dataType: 'JSON',
//     success: function (data) {
//       $.each(data, function (index) {
//         $('#filterTgl').append(
//           $(
//             '<option class="filterTgl" value ="' +
//               data[index].tgl_penilaian +
//               '">' +
//               data[index].tgl_penilaian +
//               '</option>'
//           )
//         )
//       })
//     }
//   })

//   google.charts.load('current', {
//     packages: ['corechart, bar']
//   })
//   google.charts.setOnLoadCallback()

//   function load_data(tgl, title) {
//     let temp_title = title + ' ' + tgl
//     $.ajax({
//       url: 'home/getHasil',
//       method: 'POST',
//       data: {
//         filterTgl: tgl
//       },
//       dataType: 'JSON',
//       success: function (data) {
//         tampilGrafik(data, temp_title)
//       }
//     })
//   }

//   function tampilGrafik(myData, mainTitle) {
//     let jsonData = myData
//     let data = new google.visualization.DataTable()

//     data.addColumn('string', 'Nama Karyawan')
//     data.addColumn('number', 'Nilai MPE')
//     data.addColumn({
//       role: 'style'
//     })

//     $.each(jsonData, function (i, jsonData) {
//       let nama_karyawan = jsonData.nama_karyawan
//       let nilai_mpe = parseFloat($.trim(jsonData.nilai_mpe))

//       data.addRows([
//         [
//           nama_karyawan,
//           nilai_mpe,
//           'opacity: 0.6; stroke-color: #0000FF; stroke-width: 2'
//         ]
//       ])
//     })

//     let options = {
//       title: mainTitle,
//       legend: 'none',
//       bar: {
//         groupWidth: '50%'
//       },
//       hAxis: {
//         title: 'Karyawan'
//       },
//       vAxis: {
//         title: 'Nilai MPE',
//         format: 'decimal',
//         minValue: 0,
//         maxValue: 1,
//         gridlines: {
//           count: 4
//         }
//       },
//       chartArea: {
//         width: '80%',
//         height: '70%'
//       }
//     }

//     let chart = new google.visualization.ColumnChart(
//       document.getElementById('grafik-mpe')
//     )
//     chart.draw(data, options)
//   }

//   $('#filterTgl').change(function () {
//     let tgl = $(this).val()
//     if (tgl != '' || tgl != '--- Pilih Tanggal ---') {
//       load_data(tgl, 'Penilaian Tanggal')
//     }
//   })
// })